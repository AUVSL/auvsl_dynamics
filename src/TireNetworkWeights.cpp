//#include "solver.h"
//Auto Generated by pretrain.py

void TireNetwork::load_model(){
  is_loaded = 1;
weight0 <<  1.2790e+02, -8.5457e-02, -2.4004e-03, -2.7635e-04,  2.2678e-02,
         1.0687e-01, -1.0528e-01,  1.2973e-02, -6.6493e+01, -3.8856e-02,
        -3.5215e+00,  2.6443e-01, -3.0662e-03,  5.0120e-01, -3.0650e-02,
        -1.2026e-01, -3.0306e-01,  1.0569e-04,  7.9439e-02, -3.8904e-01,
         1.0203e+00,  1.0320e+00, -1.3910e-03, -1.4023e-01,  2.3745e-02,
         2.9319e-03,  4.5255e-03,  2.5052e-04,  3.4421e-03,  5.8106e-01,
        -7.6264e-02,  1.4930e-03,  3.1571e-05, -1.4034e+02, -6.7097e-02,
         9.5523e-01,  1.7815e-01, -5.8237e-04, -4.5461e-02,  5.4440e-02,
         7.9415e-01, -3.1576e-01, -6.0182e-04, -1.1764e-01, -1.2090e-01,
         4.6402e-01,  2.6285e+00, -3.6222e-03, -7.5976e-02, -1.7765e-01,
         2.2238e+01, -3.2463e-01, -8.6600e-03, -2.5772e+00, -6.9950e-02,
         3.6666e+00, -2.9933e-02,  4.2893e-03, -5.3903e-01, -5.4913e-02,
         4.0503e-01, -4.9423e-01, -3.1345e-04, -5.4264e-02,  4.4413e-01,
         3.2831e-03,  1.1134e-04,  3.8903e-04,  2.1669e-04, -1.7536e+00,
        -8.5635e-01,  1.1127e+00, -9.9722e-05,  1.0168e-01,  1.0718e-02,
         8.2967e-01,  2.6852e-01, -4.2573e-04, -3.7454e-02, -1.5835e-01;
bias0 <<  0.0499, -0.1251,  0.0773,  0.3588,  2.1510,  0.3003,  0.0628,  0.4568,
        -0.1720,  5.0684, -0.1659, -0.3346, -0.0103, -2.7089,  2.1487,  0.0963;
weight2 <<  1.8174e-02, -1.1680e-02,  7.4169e-02,  1.1726e-01, -4.4100e-01,
        -1.5901e-01,  3.3371e-02, -7.6100e-02, -1.9715e-01, -2.3878e-01,
        -3.5988e-02,  7.2389e-02, -5.8074e-02,  3.9731e-01,  2.7144e-01,
        -1.3145e-01,  3.5330e+00,  3.1266e-02,  1.3914e-01,  3.1307e-01,
         2.4797e-02,  7.6600e-01,  5.3907e-01,  7.1552e-01,  1.7665e-01,
        -2.4794e-01, -1.6541e-02, -1.3905e-01, -1.3602e-01,  2.6734e-01,
         1.9614e-01,  9.1195e-01, -1.6274e+00,  5.9364e-01, -6.2996e-01,
        -3.4874e-02,  5.9193e-01,  5.7375e-01, -2.6574e+00,  9.3452e-01,
        -1.7304e-01,  1.6271e+00,  9.5044e-02, -5.9180e-01, -3.5629e-01,
        -1.1327e-01, -7.9530e-01, -9.0582e-01,  3.7300e-02,  2.0317e-01,
        -5.6374e-01,  5.5780e-02, -1.2819e+00,  2.8905e-01, -2.4018e-01,
         2.9671e-01,  1.0787e+00, -1.3476e+00,  1.1651e+00,  4.0666e-01,
         1.0392e-01, -4.9593e-01, -1.9687e-01, -2.1390e-01,  4.8512e-03,
         2.6436e-03,  6.5839e-03,  2.5679e-03,  4.3772e-03, -5.3161e-01,
        -2.6322e-02, -1.5627e-03, -8.9797e-04, -1.9279e-02,  4.1917e-04,
         9.2810e-03, -2.4817e-03,  6.3434e-01, -8.1027e-03,  1.0037e-02,
         4.6743e+00, -2.2223e-01,  3.6198e-01, -3.2256e-01,  2.7769e-01,
        -5.8996e-01, -5.9311e-01,  5.8068e-01,  1.2033e-01,  2.3062e-01,
         3.7589e-02,  5.7711e-02,  4.6386e-01,  4.7218e-01,  2.9654e-01,
         1.4665e+00, -3.1410e+00, -1.9983e-01, -4.4435e-01,  2.8103e-04,
        -4.8821e-01,  4.4593e-01, -5.9068e-01, -3.4512e-01, -1.0627e-01,
         5.0265e-01,  3.7576e-01, -2.9340e-01, -5.8327e-01, -8.2837e-01,
        -6.2859e-02, -1.2003e+00,  4.5118e+00, -2.4079e-01,  2.5091e-01,
         5.1284e-02,  4.2744e-01,  4.0097e-01, -4.1611e-01,  6.2877e-01,
        -1.6465e-02,  1.3321e-01, -4.3684e-02,  1.7894e-01, -1.1204e-01,
         2.3598e-02, -4.6874e-01,  8.8291e-01, -7.1670e-01, -3.2323e-01,
        -6.2131e-01, -1.7395e-01,  2.6531e-01,  3.9085e-01,  1.0958e+00,
         5.6231e-01, -1.8983e-02,  9.2086e-01,  8.6915e-02, -6.8637e-01,
        -6.2658e-04, -9.3097e-01,  4.0151e-01, -5.3536e-01, -1.0360e+00,
         5.5132e-01,  1.1419e-01,  2.5447e-01, -1.5599e-03, -1.9516e-01,
        -2.0119e+00, -1.8902e-01,  1.2308e-01, -8.7979e-01,  3.0102e-02,
         1.0528e-01, -3.1888e-01,  7.1742e-01, -4.0851e-01,  2.4420e-02,
        -1.7696e+00,  5.4202e+00, -5.5491e-01, -1.3678e+00,  9.3464e-01,
         1.3217e+00,  1.0392e+01,  5.4629e-01,  2.9126e-01, -4.3503e-01,
        -1.0277e+00, -4.0485e-01, -2.0851e-01, -1.4920e+00, -3.9540e-01,
        -3.6597e-02, -5.3469e-02, -2.1429e-02,  1.8808e+00,  4.1070e-01,
        -4.6786e-01, -7.2488e-01,  1.1915e-01, -1.6012e-01,  8.1447e-02,
        -1.6410e+00, -4.8029e-01,  1.7900e+00,  6.0381e-01,  4.4515e-01,
        -4.7046e-01, -1.2930e-01,  6.6667e-02,  1.9695e-02, -4.2693e-01,
        -4.9910e-01,  1.7337e-02, -5.5294e-01, -8.8736e-02,  6.5442e-02,
         2.7090e-01,  1.7662e-01,  8.8151e-01,  5.2678e-01, -4.1041e-02,
         3.4348e-01,  2.0461e+00,  6.5666e-01, -8.6038e-02, -3.7927e-01,
         6.9326e-01,  4.1059e-01, -4.7773e-01,  5.2199e-01,  4.4713e-01,
        -2.2271e-01, -9.6728e-01,  3.0807e+00,  5.6126e-01, -7.3440e-01,
        -3.3208e-01,  2.4637e-02,  4.8291e-01, -2.2842e-01, -5.8139e-03,
        -4.1096e-02,  8.5576e-01,  2.7562e-01, -5.1704e-01, -1.1838e-01,
         1.5813e-01,  1.1138e-01, -9.1164e-02, -6.9049e-01, -2.7199e-01,
         8.2455e-01,  1.4628e-02,  5.6934e-01, -1.9454e-01, -4.0223e-01,
         2.1149e+00,  9.7024e-01, -4.2831e-01, -5.0217e-02, -3.3528e-02,
        -3.5240e-01, -3.6271e+00, -5.9518e-01, -1.3586e+00,  1.4724e+00,
         3.2753e-01, -4.6201e-01,  3.7821e-01,  4.2359e-01,  1.9590e-01,
         6.5339e-01;
bias2 <<  0.7141, -0.0532, -1.0793, -1.5839,  0.5365, -1.1143, -0.0372, -0.2219,
        -2.4169,  1.4720,  0.7805,  1.8768,  1.6905, -0.3797,  0.7917,  0.8006;
weight4 <<  2.2265e+00,  4.2084e-02,  4.8672e-02, -1.8794e+00, -7.0349e-01,
         3.1056e-02,  6.6705e-02,  1.0147e-02,  1.7576e-01, -9.6250e-02,
         3.0147e-03,  7.8798e-01, -1.1700e+00, -8.2462e-01, -1.6349e+00,
         1.5840e-02, -2.3347e-01, -1.4757e+00, -7.8920e-01,  3.7556e-01,
        -6.4856e-02, -1.6159e+00, -1.3359e+00,  1.5599e+00,  8.0382e-01,
         1.2220e+00,  5.4192e-01, -9.4409e-02,  1.0331e-03, -3.4527e-02,
         4.5406e-02,  1.2477e+00, -1.1140e-02,  9.3131e-03,  2.1876e-03,
        -1.0562e-02, -2.7171e+00, -1.0141e-02, -4.9004e-03, -2.4005e-02,
        -1.0579e-01,  3.9138e-02,  3.1219e-02,  3.0279e-02,  1.0898e-02,
         1.2717e-02, -7.7187e-02,  1.1969e-02;
bias4 << -0.5716,  0.1717, -0.4027;
out_mean << 0.0, -7.861906288051797, 702.616677798;
out_std << 209.57347877308797, 331.23855068311303, 285.0602943015066;
in_mean << 0.0, 2.003975293922059, -0.004014776803726001, 0.0, 0.050630919760899985;
in_std_inv << 2.305055468044195, 1.1545013810233884, 2.3096342254816484, 2.310039906023909, 0.028547002200876626;
in_std_inv = in_std_inv.cwiseInverse();
}
